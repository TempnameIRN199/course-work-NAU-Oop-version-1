	//void readFromFile() {
	//	ifstream fin("PriceList.txt");
	//	if (!fin.is_open()) {
	//		cout << "Failed to open file!" << endl;
	//		return;
	//	}
	//	string line;
	//	while (getline(fin, line)) {
	//		istringstream iss(line);
	//		string name, firm, model, date;
	//		int speed, price;
	//		if (!(iss >> name >> firm >> model >> speed >> price >> date)) {
	//			continue;
	//		}
	//		list.push_back(DataBase(name, firm, model, speed, price, date));
	//	}
	//	fin.close();
	//}

	//void readFromFile() {
	//	//static bool is_file_read = false; // переменная-флаг
	//	//if (is_file_read) {
	//	//	return; // если файл уже был прочитан, то выходим из функции
	//	//}
	//	ifstream fon;
	//	fon.open("PriceList.txt");
	//	string name, firm, model, date;
	//	int speed, price;
	//	if (fon.is_open())
	//	{
	//		//fon.seekg(80);
	//		//while (!(fon >> name >> firm >> model >> speed >> price >> date))
	//		//{
	//		//	list.push_back(DataBase(name, firm, model, speed, price, date));
	//		//}
	//		string line;
	//		getline(fon, line);
	//		istringstream iss(line);
	//		if (!(iss >> name >> firm >> model >> speed >> price >> date)) {
	//			 return;
	//		}
	//		list.push_back(DataBase(name, firm, model, speed, price, date));
	//		//is_file_read = true; // меняем значение переменной-флага
	//	}
	//	fon.close();
	//}
	//void readFromFile() {
	//	ifstream fon;
	//	fon.open("PriceList.txt");
	//	string name, firm, model, date;
	//	int speed, price;
	//	if (fon.is_open()) // fin.eof()
	//	{
	//		// как сделать так, чтобы при повторном вызову метода информация не дублировалась? - 
	//		fon.seekg(80);
	//		while (fon >> name >> firm >> model >> speed >> price >> date)
	//		{
	//			list.push_back(DataBase(name, firm, model, speed, price, date));
	//		}
	//	}
	//	fon.close();
	//}